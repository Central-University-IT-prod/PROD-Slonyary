"""Add basic structure

Revision ID: ee2bb225c010
Revises:
Create Date: 2024-03-31 20:00:56.914854

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "ee2bb225c010"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("telegram_id", sa.BigInteger(), nullable=False),
        sa.Column("registered_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("telegram_id", name=op.f("uq_users_telegram_id")),
        sa.UniqueConstraint("username", name=op.f("uq_users_username")),
    )
    op.create_table(
        "tg_channels",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("chat_id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.Column("added_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
            name=op.f("fk_tg_channels_owner_id_users"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tg_channels")),
        sa.UniqueConstraint("chat_id", name=op.f("uq_tg_channels_chat_id")),
        sa.UniqueConstraint("username", name=op.f("uq_tg_channels_username")),
    )
    op.create_table(
        "vk_channels",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.Column("added_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
            name=op.f("fk_vk_channels_owner_id_users"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_vk_channels")),
    )
    op.create_table(
        "tg_channel_posts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.Column("tg_channel_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("md_text", sa.String(), nullable=False),
        sa.Column("publish_time", sa.DateTime(), nullable=False),
        sa.Column("is_published", sa.Boolean(), nullable=False),
        sa.Column("added_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
            name=op.f("fk_tg_channel_posts_owner_id_users"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["tg_channel_id"],
            ["tg_channels.id"],
            name=op.f("fk_tg_channel_posts_tg_channel_id_tg_channels"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tg_channel_posts")),
    )
    op.create_table(
        "user_tg_channels",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("tg_channel_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tg_channel_id"],
            ["tg_channels.id"],
            name=op.f("fk_user_tg_channels_tg_channel_id_tg_channels"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_user_tg_channels_user_id_users"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "tg_channel_id", name=op.f("pk_user_tg_channels")
        ),
    )
    op.create_table(
        "user_vk_channels",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("vk_channel_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_user_vk_channels_user_id_users"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["vk_channel_id"],
            ["vk_channels.id"],
            name=op.f("fk_user_vk_channels_vk_channel_id_vk_channels"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "vk_channel_id", name=op.f("pk_user_vk_channels")
        ),
    )
    op.create_table(
        "vk_channel_posts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.Column("vk_channel_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("plain_text", sa.String(), nullable=False),
        sa.Column("publish_time", sa.DateTime(), nullable=False),
        sa.Column("is_published", sa.Boolean(), nullable=False),
        sa.Column("added_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
            name=op.f("fk_vk_channel_posts_owner_id_users"),
            ondelete="cascade",
        ),
        sa.ForeignKeyConstraint(
            ["vk_channel_id"],
            ["vk_channels.id"],
            name=op.f("fk_vk_channel_posts_vk_channel_id_vk_channels"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_vk_channel_posts")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("vk_channel_posts")
    op.drop_table("user_vk_channels")
    op.drop_table("user_tg_channels")
    op.drop_table("tg_channel_posts")
    op.drop_table("vk_channels")
    op.drop_table("tg_channels")
    op.drop_table("users")
    # ### end Alembic commands ###
